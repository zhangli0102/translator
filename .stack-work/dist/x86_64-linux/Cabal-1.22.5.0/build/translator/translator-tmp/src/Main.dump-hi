
==================== FINAL INTERFACE ====================
2016-07-04 01:25:22.829075 UTC

interface main@main:Main 7103
  interface hash: 1383c81c1a282d8bfc27ebdda24ef075
  ABI hash: c303974b24d32dc2f3b6928d62125aee
  export-list hash: eb42b0367d514b5953494cce918a7ed0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 97381452716c356acaa4382230a95935
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.chineseToEnglish
  Main.chineseToGerman
  Main.englishToChinese
  Main.germanToChinese
  Main.main
module dependencies: Translator
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO.Handle 631f32e0ad65df940f6a2b3e721d8452
import  -/  base-4.8.2.0:GHC.IO.Handle.FD 4b888b3713ea36bd21caa2badeaf319d
import  -/  base-4.8.2.0:GHC.IO.Handle.Text 06d2dc7704bcfe88a2157fd04748ace5
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.Exit f5581af4ad998e898da01fdc74c2769b
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  Translator db78e0be725a768c72049c9fd9974501
  exports: b51f7469871d5384189032d0e6e7faad
  chToEng df5299b237b4f8fa7ec9b94fa9ec24f3
  chToGer 22d2a070858d274630fc0c1e03a357ff
  engToCh 357d470d6dfcfacf8916379ebe51e1f7
  gerToCh 2c388b87e997233eddfe97b95958ae9a
2a17d82d52b12f3cf566801abfeb537a
  chineseToEnglish :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.chineseToEnglish1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
35d089a733057fdb682f21d28e3b5656
  chineseToEnglish1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
7b389dc1ac75bdc7273333de363e43dc
  chineseToGerman :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.chineseToGerman1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d9b506cf94dce3b389c8dc92a3750f3c
  chineseToGerman1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
d6ff441585d61a9cee0d4180f20787d1
  englishToChinese :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.englishToChinese1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
76e92ba79b34ee372b9eb8f6ebd99b81
  englishToChinese1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
2a8bdffd1671f80ef2c84dfa56dbb36e
  germanToChinese :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.germanToChinese1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
431591db5faf6ae342b4c411d26368f0
  germanToChinese1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
8ef547ba6589f6cbf92a5321f1d20127
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
8c7f958b322428c3435c174d023e32d6
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> Main.main6 @ () ipv
                   : arg ds
                   -> case ds of wild1 {
                        []
                        -> case GHC.Base.eqString arg Main.main5 of wild2 {
                             GHC.Types.False
                             -> case GHC.Base.eqString arg Main.main4 of wild3 {
                                  GHC.Types.False
                                  -> case GHC.Base.eqString arg Main.main3 of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Base.eqString arg Main.main2 of wild5 {
                                            GHC.Types.False -> Main.main6 @ () ipv
                                            GHC.Types.True -> Main.germanToChinese1 ipv }
                                       GHC.Types.True -> Main.englishToChinese1 ipv }
                                  GHC.Types.True -> Main.chineseToGerman1 ipv }
                             GHC.Types.True -> Main.chineseToEnglish1 ipv }
                        : ipv2 ipv3 -> Main.main6 @ () ipv } } }) -}
6b64fa45828cb837bb9922feb3cf0e5e
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "gerch"#) -}
22b511c471bd4ffadac7e1b930fb1a41
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "engch"#) -}
119170ed6299b5363b15dc7594600313
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chger"#) -}
d5c110abdcfeec185aae29f994eb4aef
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cheng"#) -}
68e9d40434a2ebc85d3fd71a5b253e02
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ @ b
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main7
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 System.Exit.die2 @ b ipv }) -}
e80e5995dbfea28de1d35b68381539e1
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Please specify the first argument as being 'engch' or 'cheng'"#) -}
1163bc61d5cdf47c22aded2bfe94009c
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

